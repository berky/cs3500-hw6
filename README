Eric Berquist (berquist.e@husky.neu.edu / berquist@ccs.neu.edu)

CS 3500: Object-Oriented Design
Homework 6/Final Project: The Adventure Game

/**********************************
/* RAW CHANGES

Adventure.scala:
        Added a few rooms, things, people, and subscribers. 'people()'
        builds a list of all Persons in the world. 'worldThings()'
        builds a list of all Things in the world.

        Pushing the two list-builders into Adventure cut down on a lot
        of duplicate code that originally appeared in Cheat,
        GPSTracker, and MaraudersMap, all of which now are much simpler.

Artifact.scala:
        Added the requisite check methods for the new Computable trait.

Cheat.scala:
        Want to know who is carrying what item? Use the verb "cheat"
        to find out.

Clock.scala:
        The interesting part of registering actions with the clock
        that have different priorities is that each action is added to
        a list in order of decreasing priority. That way, when it
        comes time to perform all the actions (when the clock ticks),
        we simply traverse the list as is and perform each action in
        order.

Computable.scala:
        A new trait that has had all the old Computer class code
        pushed into it so that it may be extended with other classes/traits.

Computer.scala:
        A Thing that extends the Computable trait. 

GPSTracker.scala:
        A usable device that reports the location of every person in
        the world. Iterate through the rooms in the world, and iterate
        through each room, pairing up people with their rooms in a
        master list. That sounds a lot more nefarious than it actually
        is. Used idiomatic code with regards to the overall project
        (casting, in particular) where possible. Borrowed main logic
        from Computer.scala. If the game becomes too difficult, it can
        extend Thing instead of MobileThing.

Grader.scala:
        An AutonomousPerson that is capable of turning
        CompletedHomeworks into GradedHomeworks, much like Jesus could
        turn water into wine, or so they say. Used idiomatic code with
        regards to the overall project (casting, in particular) where
        possible. Borrowed main logic from Computer.scala.

Laptop.scala:
        A MobileThing that extends the Computable trait.

MaraudersMap.scala:
        "cheat" and GPSTracker all rolled into one...the final
        product, so to speak. Ideally we use this, since it can't be
        stolen by NPCs and destroyed, etc.

Person.scala:
        Changed everyone's initial health from 3 to 20 because I was
        tired of dying from troll bites. Altered die() so there aren't
        RuntimeExceptions when someone is carrying a Thing and gets killed.

Seppuku.scala:
        The verb "seppuku" provides a more...interesting way to end
        the game.

Teleport.scala:
        Another new verb.
        "teleport" acts the same as "wormhole".
        "teleport <Room>" sends the player to the given room.
        "teleport <Person> <Room>" sends the given Person to the given Room.

Wormhole.scala:
        The verb "wormhole" will send you to a random room on the
        map. Implemented in Person.scala, it's also registered as an
        automatic action every 10 clock ticks for every (N)PC.

/**********************************
/* ITEMS (usable)

GPS Trackers (moveable):
        iphone
        lcars

Computers (non-moveable):
        hal-9000
        johnny-5

Laptops (moveable):
        eric-mbp

Things (non-moveable):
        blackboard
        lovely-trees
        comfy-chair
        not-so-comfy-chair

MobileThings (moveable):
        cs-book
        math-book
        htdp
        chem-book
        banana

MaraudersMap (special, non-moveable):
        marauders-map

/**********************************
